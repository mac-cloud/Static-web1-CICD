{"ast":null,"code":"var _jsxFileName = \"/home/mac-aphid/Documents/4/Urban-planning/Frontend/urban-planning/src/components/Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, TextField, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataUploadForm = () => {\n  _s();\n  const [fullName, setFullName] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [county, setCounty] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [town, setTown] = useState(\"\");\n  const [csvFile, setCsvFile] = useState(null);\n  const [predictions, setPredictions] = useState([]);\n  const handleFileChange = e => setCsvFile(e.target.files[0]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!csvFile) {\n      alert(\"Please upload a CSV file before submitting.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"fullName\", fullName);\n    formData.append(\"country\", country);\n    formData.append(\"county\", county);\n    formData.append(\"location\", location);\n    formData.append(\"town\", town);\n    formData.append(\"csvFile\", csvFile);\n\n    // Send CSV data to backend (e.g., using fetch or axios)\n    try {\n      const response = await fetch('/api/predict/', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {}\n      const data = await response.json();\n      setPredictions(data.predictions);\n      alert(\"Form submitted and predictions generated!\");\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Error submitting form.');\n    }\n\n    // Reset form after submission\n    setFullName(\"\");\n    setCountry(\"\");\n    setCounty(\"\");\n    setLocation(\"\");\n    setTown(\"\");\n    setCsvFile(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      gap: \"15px\",\n      maxWidth: \"400px\",\n      margin: \"auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      align: \"center\",\n      children: \"Data Upload Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Full Name\",\n      variant: \"outlined\",\n      value: fullName,\n      onChange: e => setFullName(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Country\",\n      variant: \"outlined\",\n      value: country,\n      onChange: e => setCountry(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"County\",\n      variant: \"outlined\",\n      value: county,\n      onChange: e => setCounty(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Location\",\n      variant: \"outlined\",\n      value: location,\n      onChange: e => setLocation(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Town\",\n      variant: \"outlined\",\n      value: town,\n      onChange: e => setTown(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      component: \"label\",\n      children: [\"Upload CSV\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".csv\",\n        hidden: true,\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 62\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), csvFile && /*#__PURE__*/_jsxDEV(Typography, {\n      children: [\"Uploaded File: \", csvFile.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(DataUploadForm, \"ZrAY/dv9faQmcRLZdf7vfDwY16A=\");\n_c = DataUploadForm;\nexport default DataUploadForm;\nvar _c;\n$RefreshReg$(_c, \"DataUploadForm\");","map":{"version":3,"names":["React","useState","Button","TextField","Typography","jsxDEV","_jsxDEV","DataUploadForm","_s","fullName","setFullName","country","setCountry","county","setCounty","location","setLocation","town","setTown","csvFile","setCsvFile","predictions","setPredictions","handleFileChange","e","target","files","handleSubmit","preventDefault","alert","formData","FormData","append","response","fetch","method","body","ok","data","json","error","console","onSubmit","style","display","flexDirection","gap","maxWidth","margin","children","variant","align","fileName","_jsxFileName","lineNumber","columnNumber","label","value","onChange","required","component","type","accept","hidden","name","color","_c","$RefreshReg$"],"sources":["/home/mac-aphid/Documents/4/Urban-planning/Frontend/urban-planning/src/components/Form.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button, TextField, Typography } from \"@mui/material\";\n\nconst DataUploadForm = () => {\n  const [fullName, setFullName] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [county, setCounty] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [town, setTown] = useState(\"\");\n  const [csvFile, setCsvFile] = useState(null);\n  const [predictions, setPredictions] = useState([]);\n\n  const handleFileChange = (e) => setCsvFile(e.target.files[0]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!csvFile) {\n      alert(\"Please upload a CSV file before submitting.\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"fullName\", fullName);\n    formData.append(\"country\", country);\n    formData.append(\"county\", county);\n    formData.append(\"location\", location);\n    formData.append(\"town\", town);\n    formData.append(\"csvFile\", csvFile);\n\n    // Send CSV data to backend (e.g., using fetch or axios)\n    try {\n      const response = await fetch('/api/predict/', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (response.ok){}\n      const data = await response.json();\n      setPredictions(data.predictions);\n      alert(\"Form submitted and predictions generated!\");\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Error submitting form.');\n    }\n\n    // Reset form after submission\n    setFullName(\"\");\n    setCountry(\"\");\n    setCounty(\"\");\n    setLocation(\"\");\n    setTown(\"\");\n    setCsvFile(null);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} style={{ display: \"flex\", flexDirection: \"column\", gap: \"15px\", maxWidth: \"400px\", margin: \"auto\" }}>\n      <Typography variant=\"h5\" align=\"center\">Data Upload Form</Typography>\n      <TextField label=\"Full Name\" variant=\"outlined\" value={fullName} onChange={(e) => setFullName(e.target.value)} required />\n      <TextField label=\"Country\" variant=\"outlined\" value={country} onChange={(e) => setCountry(e.target.value)} required />\n      <TextField label=\"County\" variant=\"outlined\" value={county} onChange={(e) => setCounty(e.target.value)} required />\n      <TextField label=\"Location\" variant=\"outlined\" value={location} onChange={(e) => setLocation(e.target.value)} required />\n      <TextField label=\"Town\" variant=\"outlined\" value={town} onChange={(e) => setTown(e.target.value)} required />\n      <Button variant=\"outlined\" component=\"label\">Upload CSV<input type=\"file\" accept=\".csv\" hidden onChange={handleFileChange} /></Button>\n      {csvFile && <Typography>Uploaded File: {csvFile.name}</Typography>}\n      <Button type=\"submit\" variant=\"contained\" color=\"primary\">Submit</Button>\n    </form>\n  );\n};\n\nexport default DataUploadForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}