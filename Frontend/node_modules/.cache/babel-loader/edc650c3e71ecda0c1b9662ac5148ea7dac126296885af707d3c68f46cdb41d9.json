{"ast":null,"code":"var _jsxFileName = \"/home/mac-aphid/Documents/4/Urban-planning/Frontend/urban-planning/src/components/Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, TextField, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataUploadForm = () => {\n  _s();\n  const [fullName, setFullName] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [county, setCounty] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [town, setTown] = useState(\"\");\n  const [csvFile, setCsvFile] = useState(null);\n  const [predictions, setPredictions] = useState([]);\n  const handleFileChange = e => setCsvFile(e.target.files[0]);\n  const handleFactorChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (file && file.type === \"text/csv\") {\n      setCsvFile(file);\n    } else {\n      alert(\"Please upload a valid CSV file.\");\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!csvFile) {\n      alert(\"Please upload a CSV file before submitting.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"fullName\", fullName);\n    formData.append(\"country\", country);\n    formData.append(\"county\", county);\n    formData.append(\"location\", location);\n    formData.append(\"town\", town);\n    formData.append(\"csvFile\", csvFile);\n\n    // Simulating a backend call\n    console.log(\"Form Data Submitted:\", {\n      fullName,\n      country,\n      county,\n      location,\n      town,\n      csvFile\n    });\n\n    // Reset form after submission\n    setFullName(\"\");\n    setCountry(\"\");\n    setCounty(\"\");\n    setLocation(\"\");\n    setTown(\"\");\n    setCsvFile(null);\n    alert(\"Form submitted successfully!\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      gap: \"15px\",\n      maxWidth: \"400px\",\n      margin: \"auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      align: \"center\",\n      children: \"Data Upload Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Full Name\",\n      variant: \"outlined\",\n      value: fullName,\n      onChange: e => setFullName(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Country\",\n      variant: \"outlined\",\n      value: country,\n      onChange: e => setCountry(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"County\",\n      variant: \"outlined\",\n      value: county,\n      onChange: e => setCounty(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Location\",\n      variant: \"outlined\",\n      value: location,\n      onChange: e => setLocation(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Town\",\n      variant: \"outlined\",\n      value: town,\n      onChange: e => setTown(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      component: \"label\",\n      children: [\"Upload CSV\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".csv\",\n        hidden: true,\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), csvFile && /*#__PURE__*/_jsxDEV(Typography, {\n      children: [\"Uploaded File: \", csvFile.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(DataUploadForm, \"ZrAY/dv9faQmcRLZdf7vfDwY16A=\");\n_c = DataUploadForm;\nexport default DataUploadForm;\nvar _c;\n$RefreshReg$(_c, \"DataUploadForm\");","map":{"version":3,"names":["React","useState","Button","TextField","Typography","jsxDEV","_jsxDEV","DataUploadForm","_s","fullName","setFullName","country","setCountry","county","setCounty","location","setLocation","town","setTown","csvFile","setCsvFile","predictions","setPredictions","handleFileChange","e","target","files","handleFactorChange","name","value","file","type","alert","handleSubmit","preventDefault","formData","FormData","append","console","log","onSubmit","style","display","flexDirection","gap","maxWidth","margin","children","variant","align","fileName","_jsxFileName","lineNumber","columnNumber","label","onChange","required","component","accept","hidden","color","_c","$RefreshReg$"],"sources":["/home/mac-aphid/Documents/4/Urban-planning/Frontend/urban-planning/src/components/Form.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button, TextField, Typography } from \"@mui/material\";\n\nconst DataUploadForm = () => {\n  const [fullName, setFullName] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [county, setCounty] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [town, setTown] = useState(\"\");\n  const [csvFile, setCsvFile] = useState(null);\n \n  const [predictions, setPredictions] = useState([]);\n\n\n  const handleFileChange = (e) => setCsvFile(e.target.files[0]);\n  \n  \n  const handleFactorChange = (e) => {\n    const { name, value } = e.target;\n    if (file && file.type === \"text/csv\") {\n      setCsvFile(file);\n    } else {\n      alert(\"Please upload a valid CSV file.\");\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!csvFile) {\n      alert(\"Please upload a CSV file before submitting.\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"fullName\", fullName);\n    formData.append(\"country\", country);\n    formData.append(\"county\", county);\n    formData.append(\"location\", location);\n    formData.append(\"town\", town);\n    formData.append(\"csvFile\", csvFile);\n\n    // Simulating a backend call\n    console.log(\"Form Data Submitted:\", { fullName, country, county, location, town, csvFile });\n\n    // Reset form after submission\n    setFullName(\"\");\n    setCountry(\"\");\n    setCounty(\"\");\n    setLocation(\"\");\n    setTown(\"\");\n    setCsvFile(null);\n    alert(\"Form submitted successfully!\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit} style={{ display: \"flex\", flexDirection: \"column\", gap: \"15px\", maxWidth: \"400px\", margin: \"auto\" }}>\n      <Typography variant=\"h5\" align=\"center\">\n        Data Upload Form\n      </Typography>\n      <TextField\n        label=\"Full Name\"\n        variant=\"outlined\"\n        value={fullName}\n        onChange={(e) => setFullName(e.target.value)}\n        required\n      />\n      <TextField\n        label=\"Country\"\n        variant=\"outlined\"\n        value={country}\n        onChange={(e) => setCountry(e.target.value)}\n        required\n      />\n      <TextField\n        label=\"County\"\n        variant=\"outlined\"\n        value={county}\n        onChange={(e) => setCounty(e.target.value)}\n        required\n      />\n      <TextField\n        label=\"Location\"\n        variant=\"outlined\"\n        value={location}\n        onChange={(e) => setLocation(e.target.value)}\n        required\n      />\n      <TextField\n        label=\"Town\"\n        variant=\"outlined\"\n        value={town}\n        onChange={(e) => setTown(e.target.value)}\n        required\n      />\n      <Button variant=\"outlined\" component=\"label\">\n        Upload CSV\n        <input\n          type=\"file\"\n          accept=\".csv\"\n          hidden\n          onChange={handleFileChange}\n        />\n      </Button>\n      {csvFile && <Typography>Uploaded File: {csvFile.name}</Typography>}\n      <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n        Submit\n      </Button>\n    </form>\n  );\n};\n\nexport default DataUploadForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}