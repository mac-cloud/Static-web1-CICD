{"ast":null,"code":"var _jsxFileName = \"/home/mac-aphid/Documents/4/Urban-planning/Frontend/urban-planning/src/components/Recommendations.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Card, CardContent, Typography, CircularProgress, Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Recommendations = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [recommendations, setRecommendations] = useState([]);\n  const [error, setError] = useState(null);\n\n  // Simulate fetching recommendations from a model/backend\n  useEffect(() => {\n    setLoading(true);\n    fetch(\"/api/recommendations\") // Replace with your backend endpoint\n    .then(response => {\n      if (!response.ok) throw new Error(\"Failed to fetch recommendations\");\n      return response.json();\n    }).then(data => {\n      setRecommendations(data); // Assuming the API returns an array of recommendations\n      setLoading(false);\n    }).catch(err => {\n      setError(err.message);\n      setLoading(false);\n    });\n  }, []);\n  const reloadRecommendations = () => {\n    setLoading(true);\n    setError(null);\n    // Repeat the fetch logic for refreshing recommendations\n    fetch(\"/api/recommendations\").then(response => {\n      if (!response.ok) throw new Error(\"Failed to fetch recommendations\");\n      return response.json();\n    }).then(data => {\n      setRecommendations(data);\n      setLoading(false);\n    }).catch(err => {\n      setError(err.message);\n      setLoading(false);\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(CircularProgress, {\n      style: {\n        display: \"block\",\n        margin: \"20px auto\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      align: \"center\",\n      children: [\"Error: \", error, /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: reloadRecommendations,\n        style: {\n          marginTop: \"10px\"\n        },\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: \"600px\",\n      margin: \"auto\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      align: \"center\",\n      gutterBottom: true,\n      children: \"Recommended for You\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      align: \"center\",\n      style: {\n        marginBottom: \"15px\",\n        color: \"green\"\n      },\n      children: \"Everything is set! Below are your recommendations.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), recommendations.map((item, index) => /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        marginBottom: \"15px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          children: item.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: reloadRecommendations,\n      style: {\n        display: \"block\",\n        margin: \"20px auto\"\n      },\n      children: \"Refresh Recommendations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Recommendations, \"t8+l0ENayofDCuIqA66JzGPWyLI=\");\n_c = Recommendations;\nexport default Recommendations;\nvar _c;\n$RefreshReg$(_c, \"Recommendations\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardContent","Typography","CircularProgress","Button","jsxDEV","_jsxDEV","Recommendations","_s","loading","setLoading","recommendations","setRecommendations","error","setError","fetch","then","response","ok","Error","json","data","catch","err","message","reloadRecommendations","style","display","margin","fileName","_jsxFileName","lineNumber","columnNumber","color","align","children","variant","onClick","marginTop","maxWidth","padding","gutterBottom","marginBottom","map","item","index","title","description","_c","$RefreshReg$"],"sources":["/home/mac-aphid/Documents/4/Urban-planning/Frontend/urban-planning/src/components/Recommendations.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, CardContent, Typography, CircularProgress, Button } from \"@mui/material\";\n\nconst Recommendations = () => {\n  const [loading, setLoading] = useState(true);\n  const [recommendations, setRecommendations] = useState([]);\n  const [error, setError] = useState(null);\n\n  // Simulate fetching recommendations from a model/backend\n  useEffect(() => {\n    setLoading(true);\n    fetch(\"/api/recommendations\") // Replace with your backend endpoint\n      .then((response) => {\n        if (!response.ok) throw new Error(\"Failed to fetch recommendations\");\n        return response.json();\n      })\n      .then((data) => {\n        setRecommendations(data); // Assuming the API returns an array of recommendations\n        setLoading(false);\n      })\n      .catch((err) => {\n        setError(err.message);\n        setLoading(false);\n      });\n  }, []);\n\n  const reloadRecommendations = () => {\n    setLoading(true);\n    setError(null);\n    // Repeat the fetch logic for refreshing recommendations\n    fetch(\"/api/recommendations\")\n      .then((response) => {\n        if (!response.ok) throw new Error(\"Failed to fetch recommendations\");\n        return response.json();\n      })\n      .then((data) => {\n        setRecommendations(data);\n        setLoading(false);\n      })\n      .catch((err) => {\n        setError(err.message);\n        setLoading(false);\n      });\n  };\n\n  if (loading) {\n    return <CircularProgress style={{ display: \"block\", margin: \"20px auto\" }} />;\n  }\n\n  if (error) {\n    return (\n      <Typography color=\"error\" align=\"center\">\n        Error: {error}\n        <Button variant=\"contained\" color=\"primary\" onClick={reloadRecommendations} style={{ marginTop: \"10px\" }}>\n          Retry\n        </Button>\n      </Typography>\n    );\n  }\n\n  return (\n    <div style={{ maxWidth: \"600px\", margin: \"auto\", padding: \"20px\" }}>\n      <Typography variant=\"h5\" align=\"center\" gutterBottom>\n        Recommended for You\n      </Typography>\n      <Typography variant=\"body1\" align=\"center\" style={{ marginBottom: \"15px\", color: \"green\" }}>\n        Everything is set! Below are your recommendations.\n      </Typography>\n      {recommendations.map((item, index) => (\n        <Card key={index} style={{ marginBottom: \"15px\" }}>\n          <CardContent>\n            <Typography variant=\"h6\">{item.title}</Typography>\n            <Typography color=\"textSecondary\">{item.description}</Typography>\n          </CardContent>\n        </Card>\n      ))}\n      <Button variant=\"outlined\" color=\"primary\" onClick={reloadRecommendations} style={{ display: \"block\", margin: \"20px auto\" }}>\n        Refresh Recommendations\n      </Button>\n    </div>\n  );\n};\n\nexport default Recommendations;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}